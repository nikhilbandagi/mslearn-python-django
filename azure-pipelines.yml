# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '27f6bc8a-1e91-42cd-aca3-83942f03f462'

  # Web app name
  webAppName: 'python-cicd-23540'

  # Agent VM image name
  name: 'SelfAgent1'

  # Environment name
  environmentName: 'python-cicd-23540'

  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)

  # Python version: 3.7
  pythonVersion: '3.8'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    pool:
      name: $(name)
    steps:
    
    - script: |
        python3 -m venv antenv
        source antenv/bin/activate
        python3 -m pip install --upgrade pip
        pip install setup
        pip freeze > requirements.txt
      workingDirectory: $(projectRoot)
      displayName: "Install requirements"

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: true
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentJob
    pool:
      name: $(name)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:

          
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App : python-cicd-23540'
            inputs:
              azureSubscription: '$(azureServiceConnectionId)'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
          - script: 
              pip3 install selenium
              pip3 install pytest
              pytest tests/functional_tests/ --webAppUrl=https://$(webAppName).azurewebsites.net --junitxml=$(System.DefaultWorkingDirectory)/TestResults/test-results-functional.xml
            workingDirectory: $(Pipeline.Workspace)
            displayName: Run functional tests
          - task: PublishTestResults@2
            inputs:
              searchFolder: $(Pipeline.Workspace)
              testResultsFiles: '**/test-*.xml'
            displayName: Publish test results
          - task: PublishTestResults@2
            inputs:
              searchFolder: $(Pipeline.Workspace)
              testResultsFiles: '**/test-*.xml'
            displayName: 'Publish test results'